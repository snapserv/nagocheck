const nc_binary = "/usr/bin/nagopher-checks"
const nc_base_args = {
	"--verbose" = {
		set_if = "$nc_verbose$"
	}
}

object CheckCommand "nc_load" {
	import "plugin-check-command"

	command = [nc_binary, "system", "load"]
	arguments = nc_base_args + {
		"--warning" = "$nc_load_warning$"
		"--critical" = "$nc_load_critical$"
		"--per-cpu" = {
			set_if = "$nc_load_per_cpu$"
		}
	}

	vars.nc_load_warning = 0.5
	vars.nc_load_critical = 1
	vars.nc_load_per_cpu = true
}

object CheckCommand "nc_memory" {
	import "plugin-check-command"

	command = [nc_binary, "system", "memory"]
	arguments = nc_base_args + {
		"--warning" = "$nc_memory_warning$"
		"--critical" = "$nc_memory_critical$"
		"--count-reclaimable" = {
			set_if = "$nc_memory_count_reclaimable$"
		}
	}

	vars.nc_memory_warning = 80
	vars.nc_memory_critical = 90
}

object CheckCommand "nc_interface" {
	import "plugin-check-command"

	command = [nc_binary, "system", "interface"]
	arguments = nc_base_args + {
		"<name>" = {
			value = "$nc_interface_name$"
			required = true
			skip_key = true
		}

		"--speed" = "$nc_interface_speed$"
		"--duplex" = "$nc_interface_duplex$"
	}

	vars.nc_interface_duplex = "full"
}

object CheckCommand "nc_bgp_neighbor" {
	import "plugin-check-command"

	command = [nc_binary, "frrouting", "bgp-neighbor"]
	arguments = nc_base_args + {
		"<neighbor>" = {
			value = "$nc_bgp_neighbor_address$"
			required = true
			skip_key = true
		}

		"--mode" = "$nc_bgp_neighbor_mode$"
		"--vtysh-path" = "$nc_bgp_neighbor_vtysh_path$"
		"--telnet-address" = "$nc_bgp_neighbor_telnet_address$"
		"--telnet-password" = "$nc_bgp_neighbor_telnet_password$"

		"--prefix-limit" = "$nc_bgp_neighbor_prefix_limit$"
		"--uptime" = "$nc_bgp_neighbor_uptime$"
		"--critical" = {
			set_if = "$nc_bgp_neighbor_critical$"
		}
	}

	vars.nc_bgp_neighbor_prefix_limit = "10:90"
}
